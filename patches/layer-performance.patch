Layer shell: Prevent infinte configure/commit loop

Check the wlr_layer_surface_v1_state.committed bitmask to see if we need
to rearrange. This is also what sway does.

Without this check, every commit request (even if only the attached buffer 
changed) will lead to another configure event, which will lead to another
commit, etc.

This loop results in swaybg consuming 100% CPU.
--- a/dwl.c
+++ b/dwl.c
@@ -160,6 +160,7 @@ typedef struct {
 	struct wl_listener surface_commit;
 
 	struct wlr_box geo;
+	bool mapped;
 } LayerSurface;
 
 typedef struct {
@@ -801,6 +802,12 @@ commitlayersurfacenotify(struct wl_liste
 	struct wlr_output *wlr_output = wlr_layer_surface->output;
 	Monitor *m;
 
+	if (wlr_layer_surface->current.committed == 0 &&
+		layersurface->mapped == wlr_layer_surface->mapped)
+		return;
+
+	layersurface->mapped = wlr_layer_surface->mapped;
+
 	wlr_scene_node_reparent(layersurface->scene,
 			layers[wlr_layer_surface->current.layer]);
 
