Enables toggling the master area to the right.

Idea from the dwm [rmaster patch](https://dwm.suckless.org/patches/rmaster/)
by phi/Aleksandrs Stier/Peter Skrypalle.
Code from the dwl [master-right patch](https://github.com/djpohly/dwl/compare/main...Sevz17:master-right.patch) by Sevz17.
--- a/config.def.h
+++ b/config.def.h
@@ -1,6 +1,7 @@
 /* appearance */
 static const int sloppyfocus        = 1;  /* focus follows mouse */
 static const unsigned int borderpx  = 1;  /* border pixel of windows */
+static const unsigned int rmaster   = 1;  /* 1 means master-area is initally on the right */
 static const int lockfullscreen     = 1;  /* 1 will force focus on the fullscreen window */
 static const float rootcolor[]      = {0.3, 0.3, 0.3, 1.0};
 static const float bordercolor[]    = {0.5, 0.5, 0.5, 1.0};
@@ -89,6 +90,7 @@ static const Key keys[] = {
 	{ MODKEY,                    XKB_KEY_m,          setlayout,      {.v = &layouts[2]} },
 	{ MODKEY,                    XKB_KEY_space,      setlayout,      {0} },
 	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_space,      togglefloating, {0} },
++	{ MODKEY,                    XKB_KEY_r,          togglermaster,  {0} },
 	{ MODKEY,                    XKB_KEY_e,         togglefullscreen, {0} },
 	{ MODKEY,                    XKB_KEY_0,          view,           {.ui = ~0} },
 	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_parenright, tag,            {.ui = ~0} },
--- a/dwl.c
+++ b/dwl.c
@@ -183,6 +183,7 @@ struct Monitor {
 	unsigned int tagset[2];
 	double mfact;
 	int nmaster;
+	int rmaster;
 	int un_map; /* If a map/unmap happened on this monitor, then this should be true */
 };
 
@@ -294,6 +295,7 @@ static void tag(const Arg *arg);
 static void tagmon(const Arg *arg);
 static void tile(Monitor *m);
 static void togglefloating(const Arg *arg);
+static void togglermaster(const Arg *arg);
 static void togglefullscreen(const Arg *arg);
 static void toggletag(const Arg *arg);
 static void toggleview(const Arg *arg);
@@ -1140,6 +1142,13 @@ togglefullscreen(const Arg *arg)
 }
 
 void
+togglermaster(const Arg *arg)
+{
+    selmon->rmaster = !selmon->rmaster;
+    arrange(selmon);
+}
+
+void
 setfullscreen(Client *c, int fullscreen)
 {
 	c->isfullscreen = fullscreen;
@@ -2251,11 +2260,17 @@ tile(Monitor *m)
 			continue;
 		if (i < m->nmaster) {
 			h = (m->w.height - my) / (MIN(n, m->nmaster) - i);
-			resize(c, m->w.x, m->w.y + my, mw, h, 0);
+			if (m->rmaster)
+				resize(c, m->w.x + m->w.width - mw, m->w.y + my, mw, h, 0);
+			else
+				resize(c, m->w.x, m->w.y + my, mw, h, 0);
 			my += c->geom.height;
 		} else {
 			h = (m->w.height - ty) / (n - i);
-			resize(c, m->w.x + mw, m->w.y + ty, m->w.width - mw, h, 0);
+			if (m->rmaster)
+				resize(c, m->w.x, m->w.y + ty, m->w.width - mw, h, 0);
+			else
+				resize(c, m->w.x + mw, m->w.y + ty, m->w.width - mw, h, 0);
 			ty += c->geom.height;
 		}
 		i++;
